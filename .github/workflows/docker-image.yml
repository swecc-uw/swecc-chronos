name: Deploy Chronos Service

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    # allow manual triggering and from API

jobs:
  push_to_dockerhub:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/swecc-chronos:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/swecc-chronos:${{ github.sha }}

  deploy_to_swarm:
    runs-on:
      group: EC2
      labels: [self-hosted, deploy]
    
    needs: push_to_dockerhub
    
    steps:
    - name: Fix permissions
      run: |
        sudo chown -R $USER:$USER /home/ubuntu/shared-actions-runner/_work
        sudo chmod -R u+rw /home/ubuntu/shared-actions-runner/_work
    
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Deploy chronos service
      run: |
        # Remove the existing service if it exists
        docker service rm swecc-stack-chronos || true
        
        # Extract environment variables from config
        docker config inspect chronos_env --pretty | sed -n '/Data:/,$ p' | sed '1d' > env_file.txt

        # Deploy the service with the env file
        docker service create \
          --name swecc-stack-chronos \
          --network swecc-stack-swecc-network \
          --env-file env_file.txt \
          --mount type=bind,source=/var/run/docker.sock,target=/var/run/docker.sock \
          --mount type=volume,source=chronos_data,target=/app \
          --publish 8002:8002 \
          --replicas 1 \
          --restart-condition any \
          ${{ secrets.DOCKERHUB_USERNAME }}/swecc-chronos:latest

        # Clean up
        rm env_file.txt